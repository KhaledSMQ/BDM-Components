input {
  tcp {
    type => "WindowsEventLog"
    port => 8003
    codec => "json"
  }
  tcp {
    type => "ActiveDirectory"
    port => 8004
    codec => "json"
  }
  tcp {
    type => "Exchange"
    port => 8005
    codec => "json"
  }
  tcp {
    type => "EventLogFS"
    port => 8016
    codec => "json"
  }
}

filter {
  if [client] {
  drop { }
}

if [type] =~ /WindowsEventLog/ {
  mutate {
    add_field => { "tool" => "WindowsEventLog" }
  }
} else if [type] =~ /ActiveDirectory/ {
  mutate {
    add_field => { "tool" => "ActiveDirectory" }
  }
} else if [type] =~ /Exchange/ {
  mutate {
    add_field => { "tool" => "Exchange" }
  }
} else if [type] =~ /EventLogFS/ {
  mutate {
    add_field => { "tool" => "EventLogFS" }
  }
}

mutate {
  add_tag => [ "kafka-sender" ]
  convert => {
    "category" => "string"
    "categoryString" => "string"
    "computerName" => "string"
    "data" => "string"
    "eventCode" => "string"
    "eventIdentifier" => "string"
    "eventType" => "string"
    "insertionStrings" => "string"
    "logfile" => "string"
    "message" => "string"
    "recordNumber" => "string"
    "sourceName" => "string"
    "timeGenerated" => "string"
    "timeWritten" => "string"
    "type" => "string"
    "user" => "string"
    "keywords" => "string"
    "opCode" => "string"
    "taskCategory" => "string"
    "sid" => "string"
    "sidType" => "string"
    "task" => "string"
    "accountName" => "string"
    "domain" => "string"
    "severityValue" => "string"
    "severity" => "string"
    "providerGuid" => "string"
    "version" => "string"
    "opcodeValue" => "string"
    "activityID" => "string"
    "relatedActivityID" => "string"
    "processID" => "string"
    "threadID" => "string"
  }

  rename => {
    "Message" => "message"
    "EventTime" => "timeGenerated"
    "Hostname" => "computerName"
    "SourceName" => "sourceName"
    "EventID" => "eventIdentifier"
    "Task" => "task"
    "Category" => "categoryString"
    "Keywords" => "keywords"
    "Channel" => "logfile"
    "AccountName" => "accountName"
    "AccountType" => "sidType"
    "Domain" => "domain"
    "UserID" => "user"
    "SeverityValue" => "severityValue"
    "Severity" => "severity"
    "EventType" => "eventType"
    "ProviderGuid" => "providerGuid"
    "Version" => "version"
    "OpcodeValue" => "opcodeValue"
    "Opcode" => "opCode"
    "ActivityID" => "activityID"
    "RelatedActivityID" => "relatedActivityID"
    "ProcessID" => "processID"
    "ThreadID" => "threadID"
    "RecordNumber" => "recordNumber"
    "EventReceivedTime" => "timeWritten"
    "SubjectUserName" => "user"
    "SubjectUserSid" => "sid"
    "TargetUserName" => "user"
    "TargetUserSid" => "sid"
  }
}
}

output {
  stdout {
    codec => rubydebug
  }
  ingestor {
    schemaFile => "/PATH/eventlog.avsc"
    brokerList => "localhost:9092"
    requiredAcks => true
    isAsync => true
    batchNumMessages => 300
    successTopic => "BR.logs.success"
    failureTopic => "BR.all.failure"
  }
}
