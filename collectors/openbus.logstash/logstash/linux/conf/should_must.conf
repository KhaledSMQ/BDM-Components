input {
   	file {
      type => "ShouldMust"
      path => "/PATH/data/*_SHOULD_MUST_*.csv"
      start_position => "beginning"
      sincedb_path => "/PATH/offsets/sincedb_SHOULDMUST"
      codec => plain {
        charset => "ISO-8859-1"
      }
    }
}
 
filter {

  if ("true" not in [bypass]) {
    grok {
      match => [ "path", "%{GREEDYDATA}/%{GREEDYDATA:filename}\.csv" ]
      match => [ "filename", "(?<tenant>[A-Za-z]{3}$)" ]
      match => [ "filename", "(?<date>^\d{8})" ]
      break_on_match => false
    }

  } else {
    grok {
      match => [ "path", "%{GREEDYDATA}/%{GREEDYDATA:filename}\.csv" ]
      match => [ "filename", "(?<tenant>^[A-Za-z]*)" ]
      break_on_match => false
    }
  }

  mutate {
    convert => { "timestamp" => "string" }
  }

  if [type] == "ShouldMust" {
    csv {
      separator => ","
      columns => [ "VM","Cluster","Host","Regra","Status" ]
    }
    mutate {
      add_field => {
        "schema_class" => "br.com.produban.openbus.model.avro.ShouldMust"
      }
      add_tag => [ "kafka-sender" ]
      rename => {
		"VM"		=> "vm"
		"Cluster"	=> "cluster"
		"Host"		=> "host"
		"Regra"		=> "regra"
		"Status"	=> "status"
      }
    }
    if [vm] == "VM" {
      drop { }
    }
  }  

}
 

output {
  stdout {
    codec => rubydebug
  }

  if "kafka-sender" in [tags] {
    kafka {
      broker_list => "localhost:9092"
      topic_id => "openbus.enrichment.shouldmust"
      serializer_class => "br.com.produban.openbus.encoders.KafkaAvroEncoder"
    }
  }
}
